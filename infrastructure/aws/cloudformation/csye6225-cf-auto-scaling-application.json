{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"Cloud formation application file for autoscaling resources",
   "Parameters":{
      "KeyPairName":{
         "Description":"key pair name",
         "Type":"String"
      },
      "VPCID":{
         "Description":"vpc id",
         "Type":"String"
      },
      "subnetID1":{
         "Description":"subnet id",
         "Type":"String"
      },
      "subnetID2":{
         "Description":"subnet id 2",
         "Type":"String"
      },
      "subnetID3":{
         "Description":"subnet id 3",
         "Type":"String"
      },
      "AMIID":{
         "Description":"AMI id",
         "Type":"String"
      },
      "ApplicationName":{
         "Description":"csye6225-webapp",
         "Default":"csye6225-webapp",
         "Type":"String"
      },
      "DatabaseUsername":{
         "Description":"database_username",
         "Default":"csye6225master",
         "Type":"String"
      },
      "DatabasePassword":{
         "Description":"database_password",
         "Default":"csye6225password",
         "Type":"String"
      },
      "bucketName":{
         "Description":"bucket",
         "Default":"sanghviki",
         "Type":"String"
      },
      "AccountId":{
         "Description":"Account ID",
         "Type":"String"
      },
      "CertificateArn":{
         "Description":"Certificate Arn",
         "Type":"String"
      },
      "HostedZoneId":{
         "Description":"Hosted zone",
         "Type":"String"
      },
      "HostedZoneName":{
         "Description":"Hosted zone",
         "Type":"String"
      }
   },
   "Resources":{
      "CodeDeployEC2ServiceRole":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "AssumeRolePolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Principal":{
                        "Service":[
                           "ec2.amazonaws.com"
                        ]
                     },
                     "Action":[
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "ManagedPolicyArns":[
               "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
               "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
            ],
            "RoleName":"CodeDeployEC2ServiceRole"
         }
      },
      "AccessAttachmentToS3Bucket":{
         "Type":"AWS::IAM::ManagedPolicy",
         "Properties":{
            "Description":"Policy for uploading attachments into S3",
            "ManagedPolicyName":"Access-Attachment-To-S3-Bucket",
            "PolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Action":[
                        "s3:PutObject",
                        "s3:DeleteObject",
                        "s3:GetObject",
                        "s3:PutObjectAcl"
                     ],
                     "Effect":"Allow",
                     "Resource":[
                        {
                           "Fn::Join":[
                              "",
                              [
                                 "arn:aws:s3:::csye6225-spring2019-",
                                 {
                                    "Ref":"bucketName"
                                 },
                                 "csye6225.com/*"
                              ]
                           ]
                        }
                     ]
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"CodeDeployEC2ServiceRole"
               }
            ]
         }
      },
      "CodeDeployServiceRole":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "RoleName":"CodeDeployServiceRole",
            "AssumeRolePolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Principal":{
                        "Service":[
                           "codedeploy.amazonaws.com"
                        ]
                     },
                     "Action":[
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "ManagedPolicyArns":[
               "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
            ]
         }
      },
      "CodeDeployEC2S3":{
         "Type":"AWS::IAM::ManagedPolicy",
         "Properties":{
            "PolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Action":[
                        "s3:Get*",
                        "s3:List*",
                        "s3:Put*",
                        "s3:Delete*"
                     ],
                     "Effect":"Allow",
                     "Resource":[
                        {
                           "Fn::Join":[
                              "",
                              [
                                 "arn:aws:s3:::code-deploy.csye6225-spring2019-",
                                 {
                                    "Ref":"bucketName"
                                 },
                                 ".me/*"
                              ]
                           ]
                        }
                     ]
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"CodeDeployEC2ServiceRole"
               }
            ]
         }
      },
      "csye6225webapp":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupName":"csye6225webapp",
            "GroupDescription":"SG for web server",
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":"22",
                  "ToPort":"22",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"80",
                  "ToPort":"80",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"8080",
                  "ToPort":"8080",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"443",
                  "ToPort":"443",
                  "CidrIp":"0.0.0.0/0"
               }
            ],
            "VpcId":{
               "Ref":"VPCID"
            }
         }
      },
      "csye6225rds":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupName":"db_server_sg",
            "GroupDescription":"SG for DB server",
            "SecurityGroupIngress":{
               "IpProtocol":"tcp",
               "FromPort":"3306",
               "ToPort":"3306",
               "SourceSecurityGroupId":{
                  "Fn::GetAtt":[
                     "csye6225webapp",
                     "GroupId"
                  ]
               }
            },
            "VpcId":{
               "Ref":"VPCID"
            }
         }
      },
      "myDynamoDBTable":{
         "Type":"AWS::DynamoDB::Table",
         "Properties":{
            "AttributeDefinitions":[
               {
                  "AttributeName":"id",
                  "AttributeType":"S"
               }
            ],
            "TimeToLiveSpecification":{
               "AttributeName":"ttl",
               "Enabled":true
            },
            "KeySchema":[
               {
                  "AttributeName":"id",
                  "KeyType":"HASH"
               }
            ],
            "ProvisionedThroughput":{
               "ReadCapacityUnits":"5",
               "WriteCapacityUnits":"5"
            },
            "TableName":"csye6225"
         }
      },
      "myDBSubnet":{
         "Type":"AWS::RDS::DBSubnetGroup",
         "Properties":{
            "DBSubnetGroupDescription":"DB Private Subnet1",
            "SubnetIds":[
               {
                  "Ref":"subnetID1"
               },
               {
                  "Ref":"subnetID2"
               },
               {
                  "Ref":"subnetID3"
               }
            ]
         }
      },
      "myCodeDeploy":{
         "Type":"AWS::CodeDeploy::Application",
         "Properties":{
            "ApplicationName":{
               "Ref":"ApplicationName"
            },
            "ComputePlatform":"Server"
         }
      },
      "myCodeDeplymentGroup":{
         "DependsOn":["myCodeDeploy","csye6225TargetGroup","WebServerGroup"],
         "Type":"AWS::CodeDeploy::DeploymentGroup",
         "Properties":{
            "ApplicationName":{
               "Ref":"ApplicationName"
            }, 
            "AutoScalingGroups":[{"Ref":"WebServerGroup"}],
            
            "ServiceRoleArn":{
               "Fn::GetAtt":[
                  "CodeDeployServiceRole",
                  "Arn"
               ]
            },
            "AutoRollbackConfiguration":{
               "Enabled":true,
               "Events":[
                  "DEPLOYMENT_FAILURE"
               ]
            },
            "DeploymentConfigName":"CodeDeployDefault.AllAtOnce",
            "DeploymentGroupName":"csye6225-webapp-deployment",
            "DeploymentStyle":{
               "DeploymentOption":"WITHOUT_TRAFFIC_CONTROL",
               "DeploymentType":"IN_PLACE"
            },
            "Ec2TagFilters":[
               {
                  "Key":"Name",
                  "Type":"KEY_AND_VALUE",
                  "Value":"CSYE6225_autoscaling_group"
               }
            ]
         }
      },
      "InstanceProfile":{
         "Type":"AWS::IAM::InstanceProfile",
         "Properties":{
            "Path":"/",
            "Roles":[
               {
                  "Ref":"CodeDeployEC2ServiceRole"
               }
            ]
         }
      },
      "myDBInstance":{
         "Type":"AWS::RDS::DBInstance",
         "Properties":{
            "DBName":"csye6225",
            "Engine":"MySQL",
            "EngineVersion":"5.6.34",
            "DBSubnetGroupName":{
               "Ref":"myDBSubnet"
            },
            "AllocatedStorage":"50",
            "MasterUsername":"csye6225master",
            "MasterUserPassword":"csye6225password",
            "MultiAZ":false,
            "DBInstanceClass":"db.t2.medium",
            "PubliclyAccessible":true,
            "DBInstanceIdentifier":"csye6225-spring2019",
            "VPCSecurityGroups":[
               {
                  "Fn::GetAtt":[
                     "csye6225rds",
                     "GroupId"
                  ]
               }
            ]
         }
      },
      "myTopic":{
         "Properties":{
            "DisplayName":"resetPassword",
            "TopicName":"reset_password"
         },
         "Type":"AWS::SNS::Topic"
      },
      "MySubscription":{
         "Type":"AWS::SNS::Subscription",
         "Properties":{
            "Endpoint":{
               "Fn::Join":[
                  ":",
                  [
                     "arn:aws:lambda:us-east-1",
                     {
                        "Ref":"AccountId"
                     },
                     "function:resetLambda"
                  ]
               ]
            },
            "Protocol":"lambda",
            "TopicArn":{
               "Ref":"myTopic"
            }
         }
      },
      "lambdaPermission":{
         "Properties":{
            "Action":"lambda:InvokeFunction",
            "FunctionName":"resetLambda",
            "Principal":"sns.amazonaws.com",
            "SourceArn":{
               "Fn::Join":[
                  ":",
                  [
                     "arn:aws:lambda:us-east-1",
                     {
                        "Ref":"AccountId"
                     },
                     "function:resetLambda"
                  ]
               ]
            }
         },
         "Type":"AWS::Lambda::Permission"
      },
      "WafStack" : {
         "Type" : "AWS::CloudFormation::Stack",
         "Properties" : {
            "ResourceId": { "Ref": "csye6225LoadBalancer"},
            "TemplateURL":              
            {
                  "Fn::Join":[
                     "",
                     [
                        "https://s3.amazonaws.com/csye6225-spring2019-",
                        {
                           "Ref":"bucketName"
                        },
                        ".me.csye6225.com/waf-owasp.yaml"
                     ]
                  ]
            },
             "TimeoutInMinutes" : "60"
         }
      },
      "csye6225LaunchConfig":{
         "Type":"AWS::AutoScaling::LaunchConfiguration",
         "Properties":{
            "AssociatePublicIpAddress":"True",
            "ImageId":{
               "Ref":"AMIID"
            },
            "InstanceType":"t2.micro",
            "KeyName":{
               "Ref":"KeyPairName"
            },
            "LaunchConfigurationName":"asg_launch_config",
            "IamInstanceProfile":{
               "Ref":"InstanceProfile"
            },
            "BlockDeviceMappings":[
               {
                  "DeviceName":"/dev/sdm",
                  "Ebs":{
                     "VolumeType":"io1",
                     "Iops":"200",
                     "DeleteOnTermination":"true",
                     "VolumeSize":"20"
                  }
               }
            ],
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "\n",
                     [
                        "#!/bin/bash -xe",
                        "echo \"export CATALINA_HOME='/opt/tomcat/'\" >> ~/.bashrc",
                        "sudo systemctl start tomcat.service",
                        "sudo systemctl status tomcat.service",
                        "sudo systemctl start mysqld",
                        "sudo systemctl status mysqld",
                        "sudo systemctl stop tomcat.service",
                        "cd /opt/tomcat/apache-tomcat-9.0.17/bin",
                        "sudo touch setenv.sh",
                        "sudo chmod 777 setenv.sh",
                        "sudo echo '#!/bin/sh' >> setenv.sh",
                        {
                           "Fn::Join":[
                              "",
                              [
                                 "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=jdbc:mysql://",
                                 {
                                    "Fn::GetAtt":[
                                       "myDBInstance",
                                       "Endpoint.Address"
                                    ]
                                 },
                                 ":3306/csye6225\"' >> setenv.sh \n"
                              ]
                           ]
                        },
                        {
                           "Fn::Join":[
                              "",
                              [
                                 "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=",
                                 {
                                    "Ref":"DatabaseUsername"
                                 },
                                 "\"' >> setenv.sh \n"
                              ]
                           ]
                        },
                        {
                           "Fn::Join":[
                              "",
                              [
                                 "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Daws.s3.audio.bucket=csye6225-spring2019-",
                                 {
                                    "Ref":"bucketName"
                                 },
                                 ".me.csye6225.com\"' >> setenv.sh \n"
                              ]
                           ]
                        },
                        {
                           "Fn::Join":[
                              "",
                              [
                                 "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=",
                                 {
                                    "Ref":"DatabasePassword"
                                 },
                                 "\"' >> setenv.sh \n"
                              ]
                           ]
                        },
                        {
                           "Fn::Join":[
                              "",
                              [
                                 "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Daws.sns.topic.resetpassword.ARN=",
                                 {
                                    "Ref":"myTopic"
                                 },
                                 "\"' >> setenv.sh \n"
                              ]
                           ]
                        },
                        "sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.profiles.active=dev\"' >> setenv.sh \n",
                        "systemctl daemon-reload",
                        "systemctl enable tomcat.service",
                        "systemctl start tomcat.service",
                        "cd /usr/local/src/statsd",
                        "node stats.js statsd-config.js &"
                     ]
                  ]
               }
            },
            "SecurityGroups":[
               {
                  "Ref":"csye6225webapp"
               }
            ]
         }
      },
      "csye6225TargetGroup":{
         "Type":"AWS::ElasticLoadBalancingV2::TargetGroup",
         "Properties":{
            "Name":"csye6225TargetGroup",
            "HealthCheckIntervalSeconds":30,
            "HealthCheckTimeoutSeconds":20,
            "Protocol":"HTTP",
            "HealthCheckProtocol":"HTTP",
            "HealthCheckPort":"8080",
            "Matcher":{
               "HttpCode":"401,200"
            },
            "HealthyThresholdCount":3,
            "TargetGroupAttributes":[
               {
                  "Key":"deregistration_delay.timeout_seconds",
                  "Value":"600"
               }
            ],
            "Port":8080,
            "VpcId":{
               "Ref":"VPCID"
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"CSYE6225_autoscaling_group"
               }
            ]
         }
      },
      "ELBSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"csye6225-elb",
            "VpcId":{
               "Ref":"VPCID"
            },
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":"443",
                  "ToPort":"443",
                  "CidrIp":"0.0.0.0/0"
               }
            ]
         }
      },
      "webappListener":{
         "Type":"AWS::ElasticLoadBalancingV2::Listener",
         "Properties":{
            "Certificates":[
               {
                  "CertificateArn":{
                     "Ref":"CertificateArn"
                  }
               }
            ],
            "DefaultActions":[
               {
                  "Type":"forward",
                  "TargetGroupArn":{
                     "Ref":"csye6225TargetGroup"
                  }
               }
            ],
            "LoadBalancerArn":{
               "Ref":"csye6225LoadBalancer"
            },
            "Port":443,
            "Protocol":"HTTPS"
         }
      },
      "csye6225LoadBalancer":{
         "Type":"AWS::ElasticLoadBalancingV2::LoadBalancer",
         "DependsOn":["csye6225webapp"],
         "Properties":{
            "LoadBalancerAttributes":[
               {
                  "Key":"idle_timeout.timeout_seconds",
                  "Value":"60"
               }
            ],
            "Name":"csye6225LoadBalancer",
            "Scheme":"internet-facing",
            "Type":"application",
            "IpAddressType":"ipv4",
            "SecurityGroups":[
               {
                  "Ref":"csye6225webapp"
               }
            ],
            "Subnets":[
               {
                  "Ref":"subnetID1"
               },
               {
                  "Ref":"subnetID2"
               },
               {
                  "Ref":"subnetID3"
               }
            ],
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"CSYE6225_autoscaling_group"
               }
            ]
         }
      },
      "myDNSRecord":{
         "Type" : "AWS::Route53::RecordSet",
         "Properties" : {
                          "HostedZoneId": {"Ref": "HostedZoneId"},
                          "Name": {"Ref": "HostedZoneName"},
                          "Comment": "DNS name for my instance.",
                          "Type": "A",
                          "AliasTarget": {
                            "DNSName": {"Fn::GetAtt": ["csye6225LoadBalancer","DNSName"]},
                            "HostedZoneId": {"Fn::GetAtt": ["csye6225LoadBalancer","CanonicalHostedZoneID"]}
                          }
               }
       },
      "WebServerGroup":{
         "Type":"AWS::AutoScaling::AutoScalingGroup",
         "DependsOn":[
            "csye6225LoadBalancer",
            "csye6225LaunchConfig",
            "webappListener"
         ],
         "Properties":{
            "AutoScalingGroupName":"WebServerGroup",
            "Cooldown":60,
            "DesiredCapacity":3,
            "LaunchConfigurationName":{
               "Ref":"csye6225LaunchConfig"
            },
            "MaxSize":10,
            "MinSize":3,
            "VPCZoneIdentifier":[
               {
                  "Ref":"subnetID1"
               },
               {
                  "Ref":"subnetID2"
               },
               {
                  "Ref":"subnetID3"
               }
            ],
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"CSYE6225_autoscaling_group",
                  "PropagateAtLaunch":true
               }
            ],
            "TargetGroupARNs":[
               {
                  "Ref":"csye6225TargetGroup"
               }
            ]
         }
      },
      "WebServerScaleUpPolicy":{
         "Type":"AWS::AutoScaling::ScalingPolicy",
         "Properties":{
            "AdjustmentType":"ChangeInCapacity",
            "AutoScalingGroupName":{
               "Ref":"WebServerGroup"
            },
            "Cooldown":"60",
            "ScalingAdjustment":"1"
         }
      },
      "WebServerScaleDownPolicy":{
         "Type":"AWS::AutoScaling::ScalingPolicy",
         "Properties":{
            "AdjustmentType":"ChangeInCapacity",
            "AutoScalingGroupName":{
               "Ref":"WebServerGroup"
            },
            "Cooldown":"60",
            "ScalingAdjustment":"-1"
         }
      },
      "CPUAlarmHigh":{
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{
            "AlarmDescription":"Scale-up if CPU > 90% for 10 minutes",
            "MetricName":"CPUUtilization",
            "Namespace":"AWS/EC2",
            "Statistic":"Average",
            "Period":"300",
            "EvaluationPeriods":"2",
            "Threshold":"90",
            "AlarmActions":[
               {
                  "Ref":"WebServerScaleUpPolicy"
               }
            ],
            "Dimensions":[
               {
                  "Name":"AutoScalingGroupName",
                  "Value":{
                     "Ref":"WebServerGroup"
                  }
               }
            ],
            "ComparisonOperator":"GreaterThanThreshold"
         }
      },
      "CPUAlarmLow":{
         "Type":"AWS::CloudWatch::Alarm",
         "Properties":{
            "AlarmDescription":"Scale-down if CPU < 70% for 10 minutes",
            "MetricName":"CPUUtilization",
            "Namespace":"AWS/EC2",
            "Statistic":"Average",
            "Period":"300",
            "EvaluationPeriods":"2",
            "Threshold":"70",
            "AlarmActions":[
               {
                  "Ref":"WebServerScaleDownPolicy"
               }
            ],
            "Dimensions":[
               {
                  "Name":"AutoScalingGroupName",
                  "Value":{
                     "Ref":"WebServerGroup"
                  }
               }
            ],
            "ComparisonOperator":"LessThanThreshold"
         }
      }
   }
}
